CREATE DATABASE PART_SUPPLY_DB;
USE  PART_SUPPLY_DB;

CREATE TABLE SUPPLIERS(SUPPLIER_ID VARCHAR(10) PRIMARY KEY ,SUPPLIER_NAME VARCHAR(100) NOT NULL, CONTACT_NUMBER VARCHAR(10) NOT NULL, CITY VARCHAR(100));
CREATE TABLE PARTS (PARTS_ID VARCHAR(10) PRIMARY  KEY,PART_NAME VARCHAR(50) NOT NULL,WEIGHT INT NOT NULL, UNIT_PRICE DECIMAL(4,2));
CREATE TABLE SHIPMENT (SHIPMENT_ID VARCHAR(10) PRIMARY KEY,SUPPLIER_ID VARCHAR(10) ,FOREIGN KEY (SUPPLIER_ID) REFERENCES SUPPLIERS(SUPPLIER_ID),PARTS_ID VARCHAR(10),FOREIGN KEY (PARTS_ID) REFERENCES PARTS(PARTS_ID),QUANTITY INT NOT NULL ,SHIPMENT_DATE DATE);

INSERT INTO SUPPLIERS (SUPPLIER_ID, SUPPLIER_NAME, CONTACT_NUMBER, CITY) VALUES
('S001', 'ABC SUPPLIES', '9876543210', 'NEW YORK'),
('S002', 'GLOBAL TRADERS', '8765432109', 'LONDON'),
('S003', 'SUNRISE EXPORTS', '7654321098', 'MUMBAI'),
('S004', 'FASTTRACK CO.', '6543210987', 'LONDON'),
('S005', 'RAPID SUPPLY', '5432109876', 'SYDNEY'),
('S006', 'ELITE MATERIALS', '4321098765', 'BERLIN'),
('S007', 'PRIME DISTRIBUTORS', '3210987654', 'PARIS');

INSERT INTO PARTS (PARTS_ID, PART_NAME, WEIGHT, UNIT_PRICE) VALUES
('P001', 'BOLT', 50, 0.50),
('P002', 'NUT', 30, 0.30),
('P003', 'WASHER', 20, 0.25),
('P004', 'SCREW', 40, 0.40),
('P005', 'BRACKET', 120, 1.20),
('P006', 'GEAR', 80, 2.50),
('P007', 'PULLEY', 100, 3.20),
('P008', 'BEARING', 70, 1.80),
('P009', 'CLAMP', 25, 0.75),
('P010', 'RIVET', 15, 0.45);

INSERT INTO SHIPMENT (SHIPMENT_ID, SUPPLIER_ID, PARTS_ID, QUANTITY, SHIPMENT_DATE) VALUES
('SH001', 'S001', 'P001', 500, '2025-06-01'),
('SH002', 'S002', 'P002', 1000, '2025-06-02'),
('SH003', 'S003', 'P003', 750, '2025-06-03'),
('SH004', 'S004', 'P004', 300, '2025-06-04'),
('SH005', 'S005', 'P005', 200, '2025-06-05'),
('SH006', 'S006', 'P006', 150, '2025-06-06');

DESCRIBE PARTS;
DESCRIBE SUPPLIERS;
DESCRIBE SHIPMENT;

-- SUPPLIERS AND THE PARTS THEY SUPPLY (INNER JOIN):
SELECT S.SUPPLIER_NAME, P.PART_NAME, SH.QUANTITY, SH.SHIPMENT_DATE
FROM SUPPLIERS S
INNER JOIN SHIPMENT SH ON S.SUPPLIER_ID = SH.SUPPLIER_ID
INNER JOIN PARTS P ON SH.PARTS_ID = P.PARTS_ID;

-- RETURNS ALL SUPPLIERS, EVEN IF THEY HAVE NOT MADE ANY SHIPMENTS OR SUPPLIED ANY PARTS (LEFT JOIN):
SELECT S.SUPPLIER_NAME, P.PART_NAME, SH.QUANTITY, SH.SHIPMENT_DATE
FROM SUPPLIERS S
LEFT JOIN SHIPMENT SH ON S.SUPPLIER_ID = SH.SUPPLIER_ID
LEFT JOIN PARTS P ON SH.PARTS_ID = P.PARTS_ID;

-- RETURNS PAIRS OF SUPPLIERS LOCATED IN THE SAME CITY (SELF JOIN):
SELECT S1.SUPPLIER_NAME AS SUPPLIER1, S2.SUPPLIER_NAME AS SUPPLIER2, S1.CITY
FROM SUPPLIERS S1
INNER JOIN SUPPLIERS S2 ON S1.CITY = S2.CITY AND S1.SUPPLIER_ID <> S2.SUPPLIER_ID;

-- RETURNS THE COMBINED RESULT OF LEFT JOIN AND RIGHT JOIN TO ENSURE THAT ALL RECORDS FROM SUPPLIERS, SHIPMENT, AND PARTS ARE INCLUDED (FULL JOIN):
SELECT S.SUPPLIER_NAME, P.PART_NAME, SH.QUANTITY, SH.SHIPMENT_DATE
FROM SUPPLIERS S
LEFT JOIN SHIPMENT SH ON S.SUPPLIER_ID = SH.SUPPLIER_ID
LEFT JOIN PARTS P ON SH.PARTS_ID = P.PARTS_ID

UNION

SELECT S.SUPPLIER_NAME, P.PART_NAME, SH.QUANTITY, SH.SHIPMENT_DATE
FROM SUPPLIERS S
RIGHT JOIN SHIPMENT SH ON S.SUPPLIER_ID = SH.SUPPLIER_ID
RIGHT JOIN PARTS P ON SH.PARTS_ID = P.PARTS_ID;





